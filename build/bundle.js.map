{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/midifile/src/MIDIFileHeader.js","../../node_modules/midifile/src/MIDIFileTrack.js","../../node_modules/midievents/src/MIDIEvents.js","../../node_modules/utf-8/src/UTF8.js","../../node_modules/midifile/src/MIDIFile.js","../../src/utils/VP.js","../../src/components/SheetOptions.svelte","../../src/components/Track.svelte","../../src/utils/Rendering.js","../../src/components/Line.svelte","../../src/App.svelte","../../src/utils/MIDI.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.55.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","'use strict';\n\n// MIDIFileHeader : Read and edit a MIDI header chunk in a given ArrayBuffer\nfunction MIDIFileHeader(buffer) {\n  let a;\n  // No buffer creating him\n  if (!buffer) {\n    a = new Uint8Array(MIDIFileHeader.HEADER_LENGTH);\n    // Adding the header id (MThd)\n    a[0] = 0x4d;\n    a[1] = 0x54;\n    a[2] = 0x68;\n    a[3] = 0x64;\n    // Adding the header chunk size\n    a[4] = 0x00;\n    a[5] = 0x00;\n    a[6] = 0x00;\n    a[7] = 0x06;\n    // Adding the file format (1 here cause it's the most commonly used)\n    a[8] = 0x00;\n    a[9] = 0x01;\n    // Adding the track count (1 cause it's a new file)\n    a[10] = 0x00;\n    a[11] = 0x01;\n    // Adding the time division (192 ticks per beat)\n    a[12] = 0x00;\n    a[13] = 0xc0;\n    // saving the buffer\n    this.datas = new DataView(a.buffer, 0, MIDIFileHeader.HEADER_LENGTH);\n    // Parsing the given buffer\n  } else {\n    if (!(buffer instanceof ArrayBuffer)) {\n      throw Error('Invalid buffer received.');\n    }\n    this.datas = new DataView(buffer, 0, MIDIFileHeader.HEADER_LENGTH);\n    // Reading MIDI header chunk\n    if (\n      !(\n        'M' === String.fromCharCode(this.datas.getUint8(0)) &&\n        'T' === String.fromCharCode(this.datas.getUint8(1)) &&\n        'h' === String.fromCharCode(this.datas.getUint8(2)) &&\n        'd' === String.fromCharCode(this.datas.getUint8(3))\n      )\n    ) {\n      throw new Error('Invalid MIDIFileHeader : MThd prefix not found');\n    }\n    // Reading chunk length\n    if (6 !== this.datas.getUint32(4)) {\n      throw new Error('Invalid MIDIFileHeader : Chunk length must be 6');\n    }\n  }\n}\n\n// Static constants\nMIDIFileHeader.HEADER_LENGTH = 14;\nMIDIFileHeader.FRAMES_PER_SECONDS = 1;\nMIDIFileHeader.TICKS_PER_BEAT = 2;\n\n// MIDI file format\nMIDIFileHeader.prototype.getFormat = function() {\n  const format = this.datas.getUint16(8);\n  if (0 !== format && 1 !== format && 2 !== format) {\n    throw new Error(\n      'Invalid MIDI file : MIDI format (' +\n        format +\n        '),' +\n        ' format can be 0, 1 or 2 only.'\n    );\n  }\n  return format;\n};\n\nMIDIFileHeader.prototype.setFormat = function(format) {\n  if (0 !== format && 1 !== format && 2 !== format) {\n    throw new Error(\n      'Invalid MIDI format given (' +\n        format +\n        '),' +\n        ' format can be 0, 1 or 2 only.'\n    );\n  }\n  this.datas.setUint16(8, format);\n};\n\n// Number of tracks\nMIDIFileHeader.prototype.getTracksCount = function() {\n  return this.datas.getUint16(10);\n};\n\nMIDIFileHeader.prototype.setTracksCount = function(n) {\n  return this.datas.setUint16(10, n);\n};\n\n// Tick compute\nMIDIFileHeader.prototype.getTickResolution = function(tempo) {\n  // Frames per seconds\n  if (this.datas.getUint16(12) & 0x8000) {\n    return 1000000 / (this.getSMPTEFrames() * this.getTicksPerFrame());\n    // Ticks per beat\n  }\n  // Default MIDI tempo is 120bpm, 500ms per beat\n  tempo = tempo || 500000;\n  return tempo / this.getTicksPerBeat();\n};\n\n// Time division type\nMIDIFileHeader.prototype.getTimeDivision = function() {\n  if (this.datas.getUint16(12) & 0x8000) {\n    return MIDIFileHeader.FRAMES_PER_SECONDS;\n  }\n  return MIDIFileHeader.TICKS_PER_BEAT;\n};\n\n// Ticks per beat\nMIDIFileHeader.prototype.getTicksPerBeat = function() {\n  var divisionWord = this.datas.getUint16(12);\n  if (divisionWord & 0x8000) {\n    throw new Error('Time division is not expressed as ticks per beat.');\n  }\n  return divisionWord;\n};\n\nMIDIFileHeader.prototype.setTicksPerBeat = function(ticksPerBeat) {\n  this.datas.setUint16(12, ticksPerBeat & 0x7fff);\n};\n\n// Frames per seconds\nMIDIFileHeader.prototype.getSMPTEFrames = function() {\n  const divisionWord = this.datas.getUint16(12);\n  let smpteFrames;\n\n  if (!(divisionWord & 0x8000)) {\n    throw new Error('Time division is not expressed as frames per seconds.');\n  }\n  smpteFrames = divisionWord & 0x7f00;\n  if (-1 === [24, 25, 29, 30].indexOf(smpteFrames)) {\n    throw new Error('Invalid SMPTE frames value (' + smpteFrames + ').');\n  }\n  return 29 === smpteFrames ? 29.97 : smpteFrames;\n};\n\nMIDIFileHeader.prototype.getTicksPerFrame = function() {\n  const divisionWord = this.datas.getUint16(12);\n\n  if (!(divisionWord & 0x8000)) {\n    throw new Error('Time division is not expressed as frames per seconds.');\n  }\n  return divisionWord & 0x00ff;\n};\n\nMIDIFileHeader.prototype.setSMTPEDivision = function(\n  smpteFrames,\n  ticksPerFrame\n) {\n  if (29.97 === smpteFrames) {\n    smpteFrames = 29;\n  }\n  if (-1 === [24, 25, 29, 30].indexOf(smpteFrames)) {\n    throw new Error('Invalid SMPTE frames value given (' + smpteFrames + ').');\n  }\n  if (0 > ticksPerFrame || 0xff < ticksPerFrame) {\n    throw new Error(\n      'Invalid ticks per frame value given (' + smpteFrames + ').'\n    );\n  }\n  this.datas.setUint8(12, 0x80 | smpteFrames);\n  this.datas.setUint8(13, ticksPerFrame);\n};\n\nmodule.exports = MIDIFileHeader;\n","'use strict';\n\n// MIDIFileTrack : Read and edit a MIDI track chunk in a given ArrayBuffer\nfunction MIDIFileTrack(buffer, start) {\n  let a;\n  let trackLength;\n\n  // no buffer, creating him\n  if (!buffer) {\n    a = new Uint8Array(12);\n    // Adding the empty track header (MTrk)\n    a[0] = 0x4d;\n    a[1] = 0x54;\n    a[2] = 0x72;\n    a[3] = 0x6b;\n    // Adding the empty track size (4)\n    a[4] = 0x00;\n    a[5] = 0x00;\n    a[6] = 0x00;\n    a[7] = 0x04;\n    // Adding the track end event\n    a[8] = 0x00;\n    a[9] = 0xff;\n    a[10] = 0x2f;\n    a[11] = 0x00;\n    // Saving the buffer\n    this.datas = new DataView(a.buffer, 0, MIDIFileTrack.HDR_LENGTH + 4);\n    // parsing the given buffer\n  } else {\n    if (!(buffer instanceof ArrayBuffer)) {\n      throw new Error('Invalid buffer received.');\n    }\n    // Buffer length must size at least like an  empty track (8+3bytes)\n    if (12 > buffer.byteLength - start) {\n      throw new Error(\n        'Invalid MIDIFileTrack (0x' +\n          start.toString(16) +\n          ') :' +\n          ' Buffer length must size at least 12bytes'\n      );\n    }\n    // Creating a temporary view to read the track header\n    this.datas = new DataView(buffer, start, MIDIFileTrack.HDR_LENGTH);\n    // Reading MIDI track header chunk\n    if (\n      !(\n        'M' === String.fromCharCode(this.datas.getUint8(0)) &&\n        'T' === String.fromCharCode(this.datas.getUint8(1)) &&\n        'r' === String.fromCharCode(this.datas.getUint8(2)) &&\n        'k' === String.fromCharCode(this.datas.getUint8(3))\n      )\n    ) {\n      throw new Error(\n        'Invalid MIDIFileTrack (0x' +\n          start.toString(16) +\n          ') :' +\n          ' MTrk prefix not found'\n      );\n    }\n    // Reading the track length\n    trackLength = this.getTrackLength();\n    if (buffer.byteLength - start < trackLength) {\n      throw new Error(\n        'Invalid MIDIFileTrack (0x' +\n          start.toString(16) +\n          ') :' +\n          ' The track size exceed the buffer length.'\n      );\n    }\n    // Creating the final DataView\n    this.datas = new DataView(\n      buffer,\n      start,\n      MIDIFileTrack.HDR_LENGTH + trackLength\n    );\n    // Trying to find the end of track event\n    if (\n      !(\n        0xff ===\n          this.datas.getUint8(MIDIFileTrack.HDR_LENGTH + (trackLength - 3)) &&\n        0x2f ===\n          this.datas.getUint8(MIDIFileTrack.HDR_LENGTH + (trackLength - 2)) &&\n        0x00 ===\n          this.datas.getUint8(MIDIFileTrack.HDR_LENGTH + (trackLength - 1))\n      )\n    ) {\n      throw new Error(\n        'Invalid MIDIFileTrack (0x' +\n          start.toString(16) +\n          ') :' +\n          ' No track end event found at the expected index' +\n          ' (' +\n          (MIDIFileTrack.HDR_LENGTH + (trackLength - 1)).toString(16) +\n          ').'\n      );\n    }\n  }\n}\n\n// Static constants\nMIDIFileTrack.HDR_LENGTH = 8;\n\n// Track length\nMIDIFileTrack.prototype.getTrackLength = function() {\n  return this.datas.getUint32(4);\n};\n\nMIDIFileTrack.prototype.setTrackLength = function(trackLength) {\n  return this.datas.setUint32(4, trackLength);\n};\n\n// Read track contents\nMIDIFileTrack.prototype.getTrackContent = function() {\n  return new DataView(\n    this.datas.buffer,\n    this.datas.byteOffset + MIDIFileTrack.HDR_LENGTH,\n    this.datas.byteLength - MIDIFileTrack.HDR_LENGTH\n  );\n};\n\n// Set track content\nMIDIFileTrack.prototype.setTrackContent = function(dataView) {\n  let origin;\n  let destination;\n  let i;\n  let j;\n  // Calculating the track length\n  const trackLength = dataView.byteLength - dataView.byteOffset;\n\n  // Track length must size at least like an  empty track (4bytes)\n  if (4 > trackLength) {\n    throw new Error('Invalid track length, must size at least 4bytes');\n  }\n  this.datas = new DataView(\n    new Uint8Array(MIDIFileTrack.HDR_LENGTH + trackLength).buffer\n  );\n  // Adding the track header (MTrk)\n  this.datas.setUint8(0, 0x4d); // M\n  this.datas.setUint8(1, 0x54); // T\n  this.datas.setUint8(2, 0x72); // r\n  this.datas.setUint8(3, 0x6b); // k\n  // Adding the track size\n  this.datas.setUint32(4, trackLength);\n  // Copying the content\n  origin = new Uint8Array(\n    dataView.buffer,\n    dataView.byteOffset,\n    dataView.byteLength\n  );\n  destination = new Uint8Array(\n    this.datas.buffer,\n    MIDIFileTrack.HDR_LENGTH,\n    trackLength\n  );\n  for (i = 0, j = origin.length; i < j; i++) {\n    destination[i] = origin[i];\n  }\n};\n\nmodule.exports = MIDIFileTrack;\n","'use strict';\n\n// MIDIEvents : Read and edit events from various sources (ArrayBuffer, Stream)\nfunction MIDIEvents() {\n  throw new Error('MIDIEvents function not intended to be run.');\n}\n\n// Static constants\n// Event types\nMIDIEvents.EVENT_META = 0xff;\nMIDIEvents.EVENT_SYSEX = 0xf0;\nMIDIEvents.EVENT_DIVSYSEX = 0xf7;\nMIDIEvents.EVENT_MIDI = 0x8;\n// Meta event types\nMIDIEvents.EVENT_META_SEQUENCE_NUMBER = 0x00;\nMIDIEvents.EVENT_META_TEXT = 0x01;\nMIDIEvents.EVENT_META_COPYRIGHT_NOTICE = 0x02;\nMIDIEvents.EVENT_META_TRACK_NAME = 0x03;\nMIDIEvents.EVENT_META_INSTRUMENT_NAME = 0x04;\nMIDIEvents.EVENT_META_LYRICS = 0x05;\nMIDIEvents.EVENT_META_MARKER = 0x06;\nMIDIEvents.EVENT_META_CUE_POINT = 0x07;\nMIDIEvents.EVENT_META_MIDI_CHANNEL_PREFIX = 0x20;\nMIDIEvents.EVENT_META_END_OF_TRACK = 0x2f;\nMIDIEvents.EVENT_META_SET_TEMPO = 0x51;\nMIDIEvents.EVENT_META_SMTPE_OFFSET = 0x54;\nMIDIEvents.EVENT_META_TIME_SIGNATURE = 0x58;\nMIDIEvents.EVENT_META_KEY_SIGNATURE = 0x59;\nMIDIEvents.EVENT_META_SEQUENCER_SPECIFIC = 0x7f;\n// MIDI event types\nMIDIEvents.EVENT_MIDI_NOTE_OFF = 0x8;\nMIDIEvents.EVENT_MIDI_NOTE_ON = 0x9;\nMIDIEvents.EVENT_MIDI_NOTE_AFTERTOUCH = 0xa;\nMIDIEvents.EVENT_MIDI_CONTROLLER = 0xb;\nMIDIEvents.EVENT_MIDI_PROGRAM_CHANGE = 0xc;\nMIDIEvents.EVENT_MIDI_CHANNEL_AFTERTOUCH = 0xd;\nMIDIEvents.EVENT_MIDI_PITCH_BEND = 0xe;\n// MIDI event sizes\nMIDIEvents.MIDI_1PARAM_EVENTS = [\n  MIDIEvents.EVENT_MIDI_PROGRAM_CHANGE,\n  MIDIEvents.EVENT_MIDI_CHANNEL_AFTERTOUCH,\n];\nMIDIEvents.MIDI_2PARAMS_EVENTS = [\n  MIDIEvents.EVENT_MIDI_NOTE_OFF,\n  MIDIEvents.EVENT_MIDI_NOTE_ON,\n  MIDIEvents.EVENT_MIDI_NOTE_AFTERTOUCH,\n  MIDIEvents.EVENT_MIDI_CONTROLLER,\n  MIDIEvents.EVENT_MIDI_PITCH_BEND,\n];\n\n// Create an event stream parser\nMIDIEvents.createParser = function midiEventsCreateParser(\n  stream,\n  startAt,\n  strictMode\n) {\n  // Private vars\n  // Common vars\n  var eventTypeByte;\n  var event;\n  // MIDI events vars\n  var MIDIEventType;\n  var MIDIEventChannel;\n  var MIDIEventParam1;\n\n  // Wrap DataView into a data stream\n  if (stream instanceof DataView) {\n    stream = {\n      position: startAt || 0,\n      buffer: stream,\n      readUint8: function() {\n        return this.buffer.getUint8(this.position++);\n      },\n      readUint16: function() {\n        var v = this.buffer.getUint16(this.position);\n        this.position = this.position + 2;\n        return v;\n      },\n      readUint32: function() {\n        var v = this.buffer.getUint16(this.position);\n        this.position = this.position + 2;\n        return v;\n      },\n      readVarInt: function() {\n        var v = 0;\n        var i = 0;\n        var b;\n\n        while (4 > i++) {\n          b = this.readUint8();\n\n          if (b & 0x80) {\n            v += b & 0x7f;\n            v <<= 7;\n          } else {\n            return v + b;\n          }\n        }\n        throw new Error(\n          '0x' +\n            this.position.toString(16) +\n            ':' +\n            ' Variable integer length cannot exceed 4 bytes'\n        );\n      },\n      readBytes: function(length) {\n        var bytes = [];\n\n        for (; 0 < length; length--) {\n          bytes.push(this.readUint8());\n        }\n        return bytes;\n      },\n      pos: function() {\n        return '0x' + (this.buffer.byteOffset + this.position).toString(16);\n      },\n      end: function() {\n        return this.position === this.buffer.byteLength;\n      },\n    };\n    startAt = 0;\n  }\n  // Consume stream till not at start index\n  if (0 < startAt) {\n    while (startAt--) {\n      stream.readUint8();\n    }\n  }\n  // creating the parser object\n  return {\n    // Read the next event\n    next: function() {\n      // Check available datas\n      if (stream.end()) {\n        return null;\n      }\n      // Creating the event\n      event = {\n        // Memoize the event index\n        index: stream.pos(),\n        // Read the delta time\n        delta: stream.readVarInt(),\n      };\n      // Read the eventTypeByte\n      eventTypeByte = stream.readUint8();\n      if (0xf0 === (eventTypeByte & 0xf0)) {\n        // Meta events\n        if (eventTypeByte === MIDIEvents.EVENT_META) {\n          event.type = MIDIEvents.EVENT_META;\n          event.subtype = stream.readUint8();\n          event.length = stream.readVarInt();\n          switch (event.subtype) {\n            case MIDIEvents.EVENT_META_SEQUENCE_NUMBER:\n              if (strictMode && 2 !== event.length) {\n                throw new Error(stream.pos() + ' Bad metaevent length.');\n              }\n              event.msb = stream.readUint8();\n              event.lsb = stream.readUint8();\n              return event;\n            case MIDIEvents.EVENT_META_TEXT:\n            case MIDIEvents.EVENT_META_COPYRIGHT_NOTICE:\n            case MIDIEvents.EVENT_META_TRACK_NAME:\n            case MIDIEvents.EVENT_META_INSTRUMENT_NAME:\n            case MIDIEvents.EVENT_META_LYRICS:\n            case MIDIEvents.EVENT_META_MARKER:\n            case MIDIEvents.EVENT_META_CUE_POINT:\n              event.data = stream.readBytes(event.length);\n              return event;\n            case MIDIEvents.EVENT_META_MIDI_CHANNEL_PREFIX:\n              if (strictMode && 1 !== event.length) {\n                throw new Error(stream.pos() + ' Bad metaevent length.');\n              }\n              event.prefix = stream.readUint8();\n              return event;\n            case MIDIEvents.EVENT_META_END_OF_TRACK:\n              if (strictMode && 0 !== event.length) {\n                throw new Error(stream.pos() + ' Bad metaevent length.');\n              }\n              return event;\n            case MIDIEvents.EVENT_META_SET_TEMPO:\n              if (strictMode && 3 !== event.length) {\n                throw new Error(\n                  stream.pos() + ' Tempo meta event length must be 3.'\n                );\n              }\n              event.tempo =\n                (stream.readUint8() << 16) +\n                (stream.readUint8() << 8) +\n                stream.readUint8();\n              event.tempoBPM = 60000000 / event.tempo;\n              return event;\n            case MIDIEvents.EVENT_META_SMTPE_OFFSET:\n              if (strictMode && 5 !== event.length) {\n                throw new Error(stream.pos() + ' Bad metaevent length.');\n              }\n              event.hour = stream.readUint8();\n              if (strictMode && 23 < event.hour) {\n                throw new Error(\n                  stream.pos() +\n                    ' SMTPE offset hour value must' +\n                    ' be part of 0-23.'\n                );\n              }\n              event.minutes = stream.readUint8();\n              if (strictMode && 59 < event.minutes) {\n                throw new Error(\n                  stream.pos() +\n                    ' SMTPE offset minutes value' +\n                    ' must be part of 0-59.'\n                );\n              }\n              event.seconds = stream.readUint8();\n              if (strictMode && 59 < event.seconds) {\n                throw new Error(\n                  stream.pos() +\n                    ' SMTPE offset seconds value' +\n                    ' must be part of 0-59.'\n                );\n              }\n              event.frames = stream.readUint8();\n              if (strictMode && 30 < event.frames) {\n                throw new Error(\n                  stream.pos() +\n                    ' SMTPE offset frames value must' +\n                    ' be part of 0-30.'\n                );\n              }\n              event.subframes = stream.readUint8();\n              if (strictMode && 99 < event.subframes) {\n                throw new Error(\n                  stream.pos() +\n                    ' SMTPE offset subframes value' +\n                    ' must be part of 0-99.'\n                );\n              }\n              return event;\n            case MIDIEvents.EVENT_META_KEY_SIGNATURE:\n              if (strictMode && 2 !== event.length) {\n                throw new Error(stream.pos() + ' Bad metaevent length.');\n              }\n              event.key = stream.readUint8();\n              if (strictMode && (-7 > event.key || 7 < event.key)) {\n                throw new Error(stream.pos() + ' Bad metaevent length.');\n              }\n              event.scale = stream.readUint8();\n              if (strictMode && 0 !== event.scale && 1 !== event.scale) {\n                throw new Error(\n                  stream.pos() +\n                    ' Key signature scale value must' +\n                    ' be 0 or 1.'\n                );\n              }\n              return event;\n            case MIDIEvents.EVENT_META_TIME_SIGNATURE:\n              if (strictMode && 4 !== event.length) {\n                throw new Error(stream.pos() + ' Bad metaevent length.');\n              }\n              event.data = stream.readBytes(event.length);\n              event.param1 = event.data[0];\n              event.param2 = event.data[1];\n              event.param3 = event.data[2];\n              event.param4 = event.data[3];\n              return event;\n            case MIDIEvents.EVENT_META_SEQUENCER_SPECIFIC:\n              event.data = stream.readBytes(event.length);\n              return event;\n            default:\n              if (strictMode) {\n                throw new Error(\n                  stream.pos() +\n                    ' Unknown meta event type ' +\n                    '(' +\n                    event.subtype.toString(16) +\n                    ').'\n                );\n              }\n              event.data = stream.readBytes(event.length);\n              return event;\n          }\n          // System events\n        } else if (\n          eventTypeByte === MIDIEvents.EVENT_SYSEX ||\n          eventTypeByte === MIDIEvents.EVENT_DIVSYSEX\n        ) {\n          event.type = eventTypeByte;\n          event.length = stream.readVarInt();\n          event.data = stream.readBytes(event.length);\n          return event;\n          // Unknown event, assuming it's system like event\n        } else {\n          if (strictMode) {\n            throw new Error(\n              stream.pos() +\n                ' Unknown event type ' +\n                eventTypeByte.toString(16) +\n                ', Delta: ' +\n                event.delta +\n                '.'\n            );\n          }\n          event.type = eventTypeByte;\n          event.badsubtype = stream.readVarInt();\n          event.length = stream.readUint8();\n          event.data = stream.readBytes(event.length);\n          return event;\n        }\n        // MIDI eventsdestination[index++]\n      } else {\n        // running status\n        if (0 === (eventTypeByte & 0x80)) {\n          if (!MIDIEventType) {\n            throw new Error(\n              stream.pos() + ' Running status without previous event'\n            );\n          }\n          MIDIEventParam1 = eventTypeByte;\n        } else {\n          MIDIEventType = eventTypeByte >> 4;\n          MIDIEventChannel = eventTypeByte & 0x0f;\n          MIDIEventParam1 = stream.readUint8();\n        }\n        event.type = MIDIEvents.EVENT_MIDI;\n        event.subtype = MIDIEventType;\n        event.channel = MIDIEventChannel;\n        event.param1 = MIDIEventParam1;\n        switch (MIDIEventType) {\n          case MIDIEvents.EVENT_MIDI_NOTE_OFF:\n            event.param2 = stream.readUint8();\n            return event;\n          case MIDIEvents.EVENT_MIDI_NOTE_ON:\n            event.param2 = stream.readUint8();\n\n            // If velocity is 0, it's a note off event in fact\n            if (!event.param2) {\n              event.subtype = MIDIEvents.EVENT_MIDI_NOTE_OFF;\n              event.param2 = 127; // Find a standard telling what to do here\n            }\n            return event;\n          case MIDIEvents.EVENT_MIDI_NOTE_AFTERTOUCH:\n            event.param2 = stream.readUint8();\n            return event;\n          case MIDIEvents.EVENT_MIDI_CONTROLLER:\n            event.param2 = stream.readUint8();\n            return event;\n          case MIDIEvents.EVENT_MIDI_PROGRAM_CHANGE:\n            return event;\n          case MIDIEvents.EVENT_MIDI_CHANNEL_AFTERTOUCH:\n            return event;\n          case MIDIEvents.EVENT_MIDI_PITCH_BEND:\n            event.param2 = stream.readUint8();\n            return event;\n          default:\n            if (strictMode) {\n              throw new Error(\n                stream.pos() +\n                  ' Unknown MIDI event type ' +\n                  '(' +\n                  MIDIEventType.toString(16) +\n                  ').'\n              );\n            }\n            return event;\n        }\n      }\n    },\n  };\n};\n\n// Return the buffer length needed to encode the given events\nMIDIEvents.writeToTrack = function midiEventsWriteToTrack(\n  events,\n  destination,\n  strictMode\n) {\n  var index = 0;\n  var i;\n  var j;\n  var k;\n  var l;\n\n  // Converting each event to binary MIDI datas\n  for (i = 0, j = events.length; i < j; i++) {\n    // Writing delta value\n    if (events[i].delta >>> 28) {\n      throw Error(\n        'Event #' +\n          i +\n          ': Maximum delta time value reached (' +\n          events[i].delta +\n          '/134217728 max)'\n      );\n    }\n    if (events[i].delta >>> 21) {\n      destination[index++] = ((events[i].delta >>> 21) & 0x7f) | 0x80;\n    }\n    if (events[i].delta >>> 14) {\n      destination[index++] = ((events[i].delta >>> 14) & 0x7f) | 0x80;\n    }\n    if (events[i].delta >>> 7) {\n      destination[index++] = ((events[i].delta >>> 7) & 0x7f) | 0x80;\n    }\n    destination[index++] = events[i].delta & 0x7f;\n    // MIDI Events encoding\n    if (events[i].type === MIDIEvents.EVENT_MIDI) {\n      // Adding the byte of subtype + channel\n      destination[index++] = (events[i].subtype << 4) + events[i].channel;\n      // Adding the byte of the first params\n      destination[index++] = events[i].param1;\n      // Adding a byte for the optionnal second param\n      if (-1 !== MIDIEvents.MIDI_2PARAMS_EVENTS.indexOf(events[i].subtype)) {\n        destination[index++] = events[i].param2;\n      }\n      // META / SYSEX events encoding\n    } else {\n      // Adding the event type byte\n      destination[index++] = events[i].type;\n      // Adding the META event subtype byte\n      if (events[i].type === MIDIEvents.EVENT_META) {\n        destination[index++] = events[i].subtype;\n      }\n      // Writing the event length bytes\n      if (events[i].length >>> 28) {\n        throw Error(\n          'Event #' +\n            i +\n            ': Maximum length reached (' +\n            events[i].length +\n            '/134217728 max)'\n        );\n      }\n      if (events[i].length >>> 21) {\n        destination[index++] = ((events[i].length >>> 21) & 0x7f) | 0x80;\n      }\n      if (events[i].length >>> 14) {\n        destination[index++] = ((events[i].length >>> 14) & 0x7f) | 0x80;\n      }\n      if (events[i].length >>> 7) {\n        destination[index++] = ((events[i].length >>> 7) & 0x7f) | 0x80;\n      }\n      destination[index++] = events[i].length & 0x7f;\n      if (events[i].type === MIDIEvents.EVENT_META) {\n        switch (events[i].subtype) {\n          case MIDIEvents.EVENT_META_SEQUENCE_NUMBER:\n            destination[index++] = events[i].msb;\n            destination[index++] = events[i].lsb;\n            break;\n          case MIDIEvents.EVENT_META_TEXT:\n          case MIDIEvents.EVENT_META_COPYRIGHT_NOTICE:\n          case MIDIEvents.EVENT_META_TRACK_NAME:\n          case MIDIEvents.EVENT_META_INSTRUMENT_NAME:\n          case MIDIEvents.EVENT_META_LYRICS:\n          case MIDIEvents.EVENT_META_MARKER:\n          case MIDIEvents.EVENT_META_CUE_POINT:\n            for (k = 0, l = events[i].length; k < l; k++) {\n              destination[index++] = events[i].data[k];\n            }\n            break;\n          case MIDIEvents.EVENT_META_MIDI_CHANNEL_PREFIX:\n            destination[index++] = events[i].prefix;\n            break;\n          case MIDIEvents.EVENT_META_END_OF_TRACK:\n            break;\n          case MIDIEvents.EVENT_META_SET_TEMPO:\n            destination[index++] = events[i].tempo >> 16;\n            destination[index++] = (events[i].tempo >> 8) & 0xff;\n            destination[index++] = events[i].tempo & 0xff;\n            break;\n          case MIDIEvents.EVENT_META_SMTPE_OFFSET:\n            if (strictMode && 23 < events[i].hour) {\n              throw new Error(\n                'Event #' +\n                  i +\n                  ': SMTPE offset hour value must be' +\n                  ' part of 0-23.'\n              );\n            }\n            destination[index++] = events[i].hour;\n            if (strictMode && 59 < events[i].minutes) {\n              throw new Error(\n                'Event #' +\n                  i +\n                  ': SMTPE offset minutes value must' +\n                  ' be part of 0-59.'\n              );\n            }\n            destination[index++] = events[i].minutes;\n            if (strictMode && 59 < events[i].seconds) {\n              throw new Error(\n                'Event #' +\n                  i +\n                  ': SMTPE offset seconds value must' +\n                  ' be part of 0-59.'\n              );\n            }\n            destination[index++] = events[i].seconds;\n            if (strictMode && 30 < events[i].frames) {\n              throw new Error(\n                'Event #' +\n                  i +\n                  ': SMTPE offset frames amount must' +\n                  ' be part of 0-30.'\n              );\n            }\n            destination[index++] = events[i].frames;\n            if (strictMode && 99 < events[i].subframes) {\n              throw new Error(\n                'Event #' +\n                  i +\n                  ': SMTPE offset subframes amount' +\n                  ' must be part of 0-99.'\n              );\n            }\n            destination[index++] = events[i].subframes;\n            break;\n          case MIDIEvents.EVENT_META_KEY_SIGNATURE:\n            if (\n              'number' != typeof events[i].key ||\n              -7 > events[i].key ||\n              7 < events[i].scale\n            ) {\n              throw new Error(\n                'Event #' +\n                  i +\n                  ':The key signature key must be' +\n                  ' between -7 and 7'\n              );\n            }\n            if (\n              'number' !== typeof events[i].scale ||\n              0 > events[i].scale ||\n              1 < events[i].scale\n            ) {\n              throw new Error(\n                'Event #' + i + ':' + 'The key signature scale must be 0 or 1'\n              );\n            }\n            destination[index++] = events[i].key;\n            destination[index++] = events[i].scale;\n            break;\n          // Not implemented\n          case MIDIEvents.EVENT_META_TIME_SIGNATURE:\n          case MIDIEvents.EVENT_META_SEQUENCER_SPECIFIC:\n          default:\n            for (k = 0, l = events[i].length; k < l; k++) {\n              destination[index++] = events[i].data[k];\n            }\n            break;\n        }\n        // Adding bytes corresponding to the sysex event datas\n      } else {\n        for (k = 0, l = events[i].length; k < l; k++) {\n          destination[index++] = events[i].data[k];\n        }\n      }\n    }\n  }\n};\n\n// Return the buffer length needed to encode the given events\nMIDIEvents.getRequiredBufferLength = function(events) {\n  var bufferLength = 0;\n  var i = 0;\n  var j;\n\n  // Calculating the track size by adding events lengths\n  for (i = 0, j = events.length; i < j; i++) {\n    // Computing necessary bytes to encode the delta value\n    bufferLength +=\n      events[i].delta >>> 21\n        ? 4\n        : events[i].delta >>> 14\n          ? 3\n          : events[i].delta >>> 7\n            ? 2\n            : 1;\n    // MIDI Events have various fixed lengths\n    if (events[i].type === MIDIEvents.EVENT_MIDI) {\n      // Adding a byte for subtype + channel\n      bufferLength++;\n      // Adding a byte for the first params\n      bufferLength++;\n      // Adding a byte for the optionnal second param\n      if (-1 !== MIDIEvents.MIDI_2PARAMS_EVENTS.indexOf(events[i].subtype)) {\n        bufferLength++;\n      }\n      // META / SYSEX events lengths are self defined\n    } else {\n      // Adding a byte for the event type\n      bufferLength++;\n      // Adding a byte for META events subtype\n      if (events[i].type === MIDIEvents.EVENT_META) {\n        bufferLength++;\n      }\n      // Adding necessary bytes to encode the length\n      bufferLength +=\n        events[i].length >>> 21\n          ? 4\n          : events[i].length >>> 14\n            ? 3\n            : events[i].length >>> 7\n              ? 2\n              : 1;\n      // Adding bytes corresponding to the event length\n      bufferLength += events[i].length;\n    }\n  }\n  return bufferLength;\n};\n\nmodule.exports = MIDIEvents;\n","module.exports = {\n  isNotUTF8: isNotUTF8,\n  getCharLength: getCharLength,\n  getCharCode: getCharCode,\n  getStringFromBytes: getStringFromBytes,\n  getBytesForCharCode: getBytesForCharCode,\n  setBytesFromCharCode: setBytesFromCharCode,\n  setBytesFromString: setBytesFromString,\n};\n\n// non UTF8 encoding detection (cf README file for details)\nfunction isNotUTF8(bytes, byteOffset, byteLength) {\n  try {\n    getStringFromBytes(bytes, byteOffset, byteLength, true);\n  } catch (e) {\n    return true;\n  }\n  return false;\n}\n\nfunction getCharLength(theByte) {\n  // 4 bytes encoded char (mask 11110000)\n  if (0xf0 == (theByte & 0xf0)) {\n    return 4;\n    // 3 bytes encoded char (mask 11100000)\n  } else if (0xe0 == (theByte & 0xe0)) {\n    return 3;\n    // 2 bytes encoded char (mask 11000000)\n  } else if (0xc0 == (theByte & 0xc0)) {\n    return 2;\n    // 1 bytes encoded char\n  } else if (theByte == (theByte & 0x7f)) {\n    return 1;\n  }\n  return 0;\n}\n\n// UTF8 decoding functions\nfunction getCharCode(bytes, byteOffset, charLength) {\n  var charCode = 0,\n    mask = '';\n  byteOffset = byteOffset || 0;\n  // validate that the array has at least one byte in it\n  if (bytes.length - byteOffset <= 0) {\n    throw new Error('No more characters remaining in array.');\n  }\n  // Retrieve charLength if not given\n  charLength = charLength || getCharLength(bytes[byteOffset]);\n  if (charLength == 0) {\n    throw new Error(\n      bytes[byteOffset].toString(2) +\n        ' is not a significative' +\n        ' byte (offset:' +\n        byteOffset +\n        ').'\n    );\n  }\n  // Return byte value if charlength is 1\n  if (1 === charLength) {\n    return bytes[byteOffset];\n  }\n  // validate that the array has enough bytes to make up this character\n  if (bytes.length - byteOffset < charLength) {\n    throw new Error(\n      'Expected at least ' + charLength + ' bytes remaining in array.'\n    );\n  }\n  // Test UTF8 integrity\n  mask = '00000000'.slice(0, charLength) + 1 + '00000000'.slice(charLength + 1);\n  if (bytes[byteOffset] & parseInt(mask, 2)) {\n    throw Error(\n      'Index ' +\n        byteOffset +\n        ': A ' +\n        charLength +\n        ' bytes' +\n        ' encoded char' +\n        ' cannot encode the ' +\n        (charLength + 1) +\n        'th rank bit to 1.'\n    );\n  }\n  // Reading the first byte\n  mask = '0000'.slice(0, charLength + 1) + '11111111'.slice(charLength + 1);\n  charCode += (bytes[byteOffset] & parseInt(mask, 2)) << (--charLength * 6);\n  // Reading the next bytes\n  while (charLength) {\n    if (\n      0x80 !== (bytes[byteOffset + 1] & 0x80) ||\n      0x40 === (bytes[byteOffset + 1] & 0x40)\n    ) {\n      throw Error(\n        'Index ' +\n          (byteOffset + 1) +\n          ': Next bytes of encoded char' +\n          ' must begin with a \"10\" bit sequence.'\n      );\n    }\n    charCode += (bytes[++byteOffset] & 0x3f) << (--charLength * 6);\n  }\n  return charCode;\n}\n\nfunction getStringFromBytes(bytes, byteOffset, byteLength, strict) {\n  var charLength,\n    chars = [];\n  byteOffset = byteOffset | 0;\n  byteLength =\n    'number' === typeof byteLength\n      ? byteLength\n      : bytes.byteLength || bytes.length;\n  for (; byteOffset < byteLength; byteOffset++) {\n    charLength = getCharLength(bytes[byteOffset]);\n    if (byteOffset + charLength > byteLength) {\n      if (strict) {\n        throw Error(\n          'Index ' +\n            byteOffset +\n            ': Found a ' +\n            charLength +\n            ' bytes encoded char declaration but only ' +\n            (byteLength - byteOffset) +\n            ' bytes are available.'\n        );\n      }\n    } else {\n      chars.push(\n        String.fromCodePoint(getCharCode(bytes, byteOffset, charLength, strict))\n      );\n    }\n    byteOffset += charLength - 1;\n  }\n  return chars.join('');\n}\n\n// UTF8 encoding functions\nfunction getBytesForCharCode(charCode) {\n  if (charCode < 128) {\n    return 1;\n  } else if (charCode < 2048) {\n    return 2;\n  } else if (charCode < 65536) {\n    return 3;\n  } else if (charCode < 2097152) {\n    return 4;\n  }\n  throw new Error('CharCode ' + charCode + ' cannot be encoded with UTF8.');\n}\n\nfunction setBytesFromCharCode(charCode, bytes, byteOffset, neededBytes) {\n  charCode = charCode | 0;\n  bytes = bytes || [];\n  byteOffset = byteOffset | 0;\n  neededBytes = neededBytes || getBytesForCharCode(charCode);\n  // Setting the charCode as it to bytes if the byte length is 1\n  if (1 == neededBytes) {\n    bytes[byteOffset] = charCode;\n  } else {\n    // Computing the first byte\n    bytes[byteOffset++] =\n      (parseInt('1111'.slice(0, neededBytes), 2) << (8 - neededBytes)) +\n      (charCode >>> (--neededBytes * 6));\n    // Computing next bytes\n    for (; neededBytes > 0; ) {\n      bytes[byteOffset++] = ((charCode >>> (--neededBytes * 6)) & 0x3f) | 0x80;\n    }\n  }\n  return bytes;\n}\n\nfunction setBytesFromString(string, bytes, byteOffset, byteLength, strict) {\n  string = string || '';\n  bytes = bytes || [];\n  byteOffset = byteOffset | 0;\n  byteLength =\n    'number' === typeof byteLength ? byteLength : bytes.byteLength || Infinity;\n  for (var i = 0, j = string.length; i < j; i++) {\n    var neededBytes = getBytesForCharCode(string[i].codePointAt(0));\n    if (strict && byteOffset + neededBytes > byteLength) {\n      throw new Error(\n        'Not enought bytes to encode the char \"' +\n          string[i] +\n          '\" at the offset \"' +\n          byteOffset +\n          '\".'\n      );\n    }\n    setBytesFromCharCode(\n      string[i].codePointAt(0),\n      bytes,\n      byteOffset,\n      neededBytes,\n      strict\n    );\n    byteOffset += neededBytes;\n  }\n  return bytes;\n}\n","'use strict';\n\n// MIDIFile : Read (and soon edit) a MIDI file in a given ArrayBuffer\n\n// Dependencies\nvar MIDIFileHeader = require('./MIDIFileHeader');\nvar MIDIFileTrack = require('./MIDIFileTrack');\nvar MIDIEvents = require('midievents');\nvar UTF8 = require('utf-8');\n\nfunction ensureArrayBuffer(buf) {\n  if (buf) {\n    if (buf instanceof ArrayBuffer) {\n      return buf;\n    }\n    if (buf instanceof Uint8Array) {\n      // Copy/convert to standard Uint8Array, because derived classes like\n      // node.js Buffers might have unexpected data in the .buffer property.\n      return new Uint8Array(buf).buffer;\n    }\n  }\n  throw new Error('Unsupported buffer type, need ArrayBuffer or Uint8Array');\n}\n\n// Constructor\nfunction MIDIFile(buffer, strictMode) {\n  var track;\n  var curIndex;\n  var i;\n  var j;\n\n  // If not buffer given, creating a new MIDI file\n  if (!buffer) {\n    // Creating the content\n    this.header = new MIDIFileHeader();\n    this.tracks = [new MIDIFileTrack()];\n    // if a buffer is provided, parsing him\n  } else {\n    buffer = ensureArrayBuffer(buffer);\n    // Minimum MIDI file size is a headerChunk size (14bytes)\n    // and an empty track (8+3bytes)\n    if (25 > buffer.byteLength) {\n      throw new Error(\n        'A buffer of a valid MIDI file must have, at least, a' +\n          ' size of 25bytes.'\n      );\n    }\n    // Reading header\n    this.header = new MIDIFileHeader(buffer, strictMode);\n    this.tracks = [];\n    curIndex = MIDIFileHeader.HEADER_LENGTH;\n    // Reading tracks\n    for (i = 0, j = this.header.getTracksCount(); i < j; i++) {\n      // Testing the buffer length\n      if (strictMode && curIndex >= buffer.byteLength - 1) {\n        throw new Error(\n          \"Couldn't find datas corresponding to the track #\" + i + '.'\n        );\n      }\n      // Creating the track object\n      track = new MIDIFileTrack(buffer, curIndex, strictMode);\n      this.tracks.push(track);\n      // Updating index to the track end\n      curIndex += track.getTrackLength() + 8;\n    }\n    // Testing integrity : curIndex should be at the end of the buffer\n    if (strictMode && curIndex !== buffer.byteLength) {\n      throw new Error('It seems that the buffer contains too much datas.');\n    }\n  }\n}\n\n// Events reading helpers\nMIDIFile.prototype.getEvents = function(type, subtype) {\n  var events;\n  var event;\n  var playTime = 0;\n  var filteredEvents = [];\n  var format = this.header.getFormat();\n  var tickResolution = this.header.getTickResolution();\n  var i;\n  var j;\n  var trackParsers;\n  var smallestDelta;\n\n  // Reading events\n  // if the read is sequential\n  if (1 !== format || 1 === this.tracks.length) {\n    for (i = 0, j = this.tracks.length; i < j; i++) {\n      // reset playtime if format is 2\n      playTime = 2 === format && playTime ? playTime : 0;\n      events = MIDIEvents.createParser(\n        this.tracks[i].getTrackContent(),\n        0,\n        false\n      );\n      // loooping through events\n      event = events.next();\n      while (event) {\n        playTime += event.delta ? event.delta * tickResolution / 1000 : 0;\n        if (event.type === MIDIEvents.EVENT_META) {\n          // tempo change events\n          if (event.subtype === MIDIEvents.EVENT_META_SET_TEMPO) {\n            tickResolution = this.header.getTickResolution(event.tempo);\n          }\n        }\n        // push the asked events\n        if (\n          (!type || event.type === type) &&\n          (!subtype || (event.subtype && event.subtype === subtype))\n        ) {\n          event.playTime = playTime;\n          filteredEvents.push(event);\n        }\n        event = events.next();\n      }\n    }\n    // the read is concurrent\n  } else {\n    trackParsers = [];\n    smallestDelta = -1;\n\n    // Creating parsers\n    for (i = 0, j = this.tracks.length; i < j; i++) {\n      trackParsers[i] = {};\n      trackParsers[i].parser = MIDIEvents.createParser(\n        this.tracks[i].getTrackContent(),\n        0,\n        false\n      );\n      trackParsers[i].curEvent = trackParsers[i].parser.next();\n    }\n    // Filling events\n    do {\n      smallestDelta = -1;\n      // finding the smallest event\n      for (i = 0, j = trackParsers.length; i < j; i++) {\n        if (trackParsers[i].curEvent) {\n          if (\n            -1 === smallestDelta ||\n            trackParsers[i].curEvent.delta <\n              trackParsers[smallestDelta].curEvent.delta\n          ) {\n            smallestDelta = i;\n          }\n        }\n      }\n      if (-1 !== smallestDelta) {\n        // removing the delta of previous events\n        for (i = 0, j = trackParsers.length; i < j; i++) {\n          if (i !== smallestDelta && trackParsers[i].curEvent) {\n            trackParsers[i].curEvent.delta -=\n              trackParsers[smallestDelta].curEvent.delta;\n          }\n        }\n        // filling values\n        event = trackParsers[smallestDelta].curEvent;\n        playTime += event.delta ? event.delta * tickResolution / 1000 : 0;\n        if (event.type === MIDIEvents.EVENT_META) {\n          // tempo change events\n          if (event.subtype === MIDIEvents.EVENT_META_SET_TEMPO) {\n            tickResolution = this.header.getTickResolution(event.tempo);\n          }\n        }\n        // push midi events\n        if (\n          (!type || event.type === type) &&\n          (!subtype || (event.subtype && event.subtype === subtype))\n        ) {\n          event.playTime = playTime;\n          event.track = smallestDelta;\n          filteredEvents.push(event);\n        }\n        // getting next event\n        trackParsers[smallestDelta].curEvent = trackParsers[\n          smallestDelta\n        ].parser.next();\n      }\n    } while (-1 !== smallestDelta);\n  }\n  return filteredEvents;\n};\n\nMIDIFile.prototype.getMidiEvents = function() {\n  return this.getEvents(MIDIEvents.EVENT_MIDI);\n};\n\nMIDIFile.prototype.getLyrics = function() {\n  var events = this.getEvents(MIDIEvents.EVENT_META);\n  var texts = [];\n  var lyrics = [];\n  var event;\n  var i;\n  var j;\n\n  for (i = 0, j = events.length; i < j; i++) {\n    event = events[i];\n    // Lyrics\n    if (event.subtype === MIDIEvents.EVENT_META_LYRICS) {\n      lyrics.push(event);\n      // Texts\n    } else if (event.subtype === MIDIEvents.EVENT_META_TEXT) {\n      // Ignore special texts\n      if ('@' === String.fromCharCode(event.data[0])) {\n        if ('T' === String.fromCharCode(event.data[1])) {\n          // console.log('Title : ' + event.text.substring(2));\n        } else if ('I' === String.fromCharCode(event.data[1])) {\n          // console.log('Info : ' + event.text.substring(2));\n        } else if ('L' === String.fromCharCode(event.data[1])) {\n          // console.log('Lang : ' + event.text.substring(2));\n        }\n        // karaoke text follows, remove all previous text\n      } else if (\n        0 === String.fromCharCode.apply(String, event.data).indexOf('words')\n      ) {\n        texts.length = 0;\n        // console.log('Word marker found');\n        // Karaoke texts\n        // If playtime is greater than 0\n      } else if (0 !== event.playTime) {\n        texts.push(event);\n      }\n    }\n  }\n  // Choosing the right lyrics\n  if (2 < lyrics.length) {\n    texts = lyrics;\n  } else if (!texts.length) {\n    texts = [];\n  }\n  // Convert texts and detect encoding\n  try {\n    texts.forEach(function(event) {\n      event.text = UTF8.getStringFromBytes(event.data, 0, event.length, true);\n    });\n  } catch (e) {\n    texts.forEach(function(event) {\n      event.text = event.data\n        .map(function(c) {\n          return String.fromCharCode(c);\n        })\n        .join('');\n    });\n  }\n  return texts;\n};\n\n// Basic events reading\nMIDIFile.prototype.getTrackEvents = function(index) {\n  var event;\n  var events = [];\n  var parser;\n  if (index > this.tracks.length || 0 > index) {\n    throw Error('Invalid track index (' + index + ')');\n  }\n  parser = MIDIEvents.createParser(\n    this.tracks[index].getTrackContent(),\n    0,\n    false\n  );\n  event = parser.next();\n  do {\n    events.push(event);\n    event = parser.next();\n  } while (event);\n  return events;\n};\n\n// Basic events writting\nMIDIFile.prototype.setTrackEvents = function(index, events) {\n  var bufferLength;\n  var destination;\n\n  if (index > this.tracks.length || 0 > index) {\n    throw Error('Invalid track index (' + index + ')');\n  }\n  if (!events || !events.length) {\n    throw Error('A track must contain at least one event, none given.');\n  }\n  bufferLength = MIDIEvents.getRequiredBufferLength(events);\n  destination = new Uint8Array(bufferLength);\n  MIDIEvents.writeToTrack(events, destination);\n  this.tracks[index].setTrackContent(destination);\n};\n\n// Remove a track\nMIDIFile.prototype.deleteTrack = function(index) {\n  if (index > this.tracks.length || 0 > index) {\n    throw Error('Invalid track index (' + index + ')');\n  }\n  this.tracks.splice(index, 1);\n  this.header.setTracksCount(this.tracks.length);\n};\n\n// Add a track\nMIDIFile.prototype.addTrack = function(index) {\n  var track;\n\n  if (index > this.tracks.length || 0 > index) {\n    throw Error('Invalid track index (' + index + ')');\n  }\n  track = new MIDIFileTrack();\n  if (index === this.tracks.length) {\n    this.tracks.push(track);\n  } else {\n    this.tracks.splice(index, 0, track);\n  }\n  this.header.setTracksCount(this.tracks.length);\n};\n\n// Retrieve the content in a buffer\nMIDIFile.prototype.getContent = function() {\n  var bufferLength;\n  var destination;\n  var origin;\n  var i;\n  var j;\n  var k;\n  var l;\n  var m;\n  var n;\n\n  // Calculating the buffer content\n  // - initialize with the header length\n  bufferLength = MIDIFileHeader.HEADER_LENGTH;\n  // - add tracks length\n  for (i = 0, j = this.tracks.length; i < j; i++) {\n    bufferLength += this.tracks[i].getTrackLength() + 8;\n  }\n  // Creating the destination buffer\n  destination = new Uint8Array(bufferLength);\n  // Adding header\n  origin = new Uint8Array(\n    this.header.datas.buffer,\n    this.header.datas.byteOffset,\n    MIDIFileHeader.HEADER_LENGTH\n  );\n  for (i = 0, j = MIDIFileHeader.HEADER_LENGTH; i < j; i++) {\n    destination[i] = origin[i];\n  }\n  // Adding tracks\n  for (k = 0, l = this.tracks.length; k < l; k++) {\n    origin = new Uint8Array(\n      this.tracks[k].datas.buffer,\n      this.tracks[k].datas.byteOffset,\n      this.tracks[k].datas.byteLength\n    );\n    for (m = 0, n = this.tracks[k].datas.byteLength; m < n; m++) {\n      destination[i++] = origin[m];\n    }\n  }\n  return destination.buffer;\n};\n\n// Exports Track/Header constructors\nMIDIFile.Header = MIDIFileHeader;\nMIDIFile.Track = MIDIFileTrack;\n\nmodule.exports = MIDIFile;\n","const firstPossibleNote  =  21\nconst lastPossibleNote   =  108\n\nconst capitalNotes = \"!@#$%^&*()QWERTYUIOPASDFGHJKLZXCBVNM\"\n\nclass Note {\n    constructor(value, playTime, tempo, BPM, delta, shifts='keep', oors='keep') {\n        this.value      =  value\n        this.playTime   =  playTime\n        this.delta      =  delta\n        this.char       =  vpScale[value - firstPossibleNote]\n        this.tempo      =  tempo\n        this.BPM        =  BPM\n\n        this.valid      = (value >= 21 && value <= 108)\n        this.outOfRange = (value <= 35 || value >=  97)\n\n        // Make sure that capital notes go before lowercase ones\n        if (capitalNotes.includes(this.char)) {\n            if (shifts === 'Start') this.displayValue = value - lastPossibleNote\n            else if (shifts == 'End') this.displayValue = value + lastPossibleNote\n        }\n        else if (this.outOfRange) {\n            if (oors === 'Start') this.displayValue = value - 1024\n            else if (oors == 'End') this.displayValue = value + 1024\n        }\n        else this.displayValue = value\n    }\n}\n\nclass Chord {\n    constructor(notes, sequentialQuantize = true) {\n        let is_quantized = false\n        let previous_note = notes[0]\n        for (let note of notes) {\n            if (note.playTime != previous_note.playTime) {\n                is_quantized = true\n                break\n            }\n            previous_note = note\n        }\n        this.is_quantized = is_quantized\n\n        if (!is_quantized) {\n            let values = []\n            let no_dupes = []\n            notes.forEach(note => {\n                if (!(values.includes(note.value))) {\n                    values.push(note.value)\n                    no_dupes.push(note)\n                }\n            })\n            this.notes = no_dupes.sort((a, b) => { return a.displayValue - b.displayValue })\n        } else {\n            if (sequentialQuantize)\n                this.notes = notes\n            else\n                this.notes = notes.sort((a, b) => { return a.displayValue - b.displayValue })\n        }\n    }\n}\n\nclass Sheet {\n    constructor(chords) { this.chords = chords }\n\n    transpose(by, shifts='Start', oors='Start') { /* Does not mutate */\n        let newChords = []\n        this.chords.forEach((chord) => {\n            let newChord = []\n            chord.notes.forEach((note) => {\n                newChord.push(new Note(note.value + by, note.playTime, note.tempo, note.BPM, note.delta, shifts, oors))\n            })\n            newChords.push(new Chord(newChord))\n        })\n        return new Sheet(newChords)\n    }\n}\n\n// Takes NOTE_ON and SET_TEMPO events\nfunction generateSheet(events, quantize = 100, shifts = 'Start', oors = 'Start', sequentialQuantize = true) /* -> Sheet */ { \n    // console.log({ quantize, shifts, oors, sequentialQuantize })\n\n    let chords = []\n    let currentChord = []\n    let lastPlaytime = events[0].playTime ?? 0.0\n\n    let nextBPM = 0\n    let nextTempo = 0\n\n    // Generate chords\n    events.forEach(element => {\n        if(element.subtype == 0x51) { // SET TEMPO META EVENT\n            nextTempo = element.tempo\n            nextBPM = element.tempoBPM\n            return\n        } // else NOTE_ON\n        const key       =  element.param1\n        const playtime  =  element.playTime\n        const delta     =  element.delta\n        if(Math.abs(playtime - lastPlaytime) < quantize) {\n            currentChord.push(new Note(key, playtime, nextTempo, nextBPM, delta, shifts, oors))\n            lastPlaytime = playtime\n        } else { // Submit the chord\n            chords.push(new Chord(currentChord, sequentialQuantize))\n            currentChord = []\n            currentChord.push(new Note(key, playtime, nextTempo, nextBPM, delta, shifts, oors)) // Add the note as first if it's different\n            lastPlaytime = playtime\n        }\n    })\n\n    chords.push(new Chord(currentChord))\n    return new Sheet(chords)\n}\n\nconst vpScale =\n    `1234567890qwert` +\n\n    `1!2@34$5%6^78*9(0` +\n    `qQwWeErtTyYuiIoOpP` +\n     `asSdDfgGhHjJklL` +\n      `zZxcCvVbBnm` +\n\n    `yuiopasdfghj`\n\nconst lowercases = '1234567890qwertyuiopasdfghklzxcvbnm'\n\nfunction bestTransposition(sheet, deviation) {\n    function countLowercases(sheet) {\n        let monochord = []\n        for (let chord of sheet.chords) {\n            for (let note of chord.notes)\n                monochord.push({ char: note.char, oor: note.outOfRange, valid: note.valid })\n        }\n        return monochord.filter(note => lowercases.includes(note.char) && note.oor === false && note.valid === true).length\n    }\n    let most = 0\n    let best = 0\n    for(let d = -deviation; d <= deviation; d++) {\n        let contender = sheet.transpose(d)\n        let lowercases = countLowercases(contender) + Math.abs(deviation) / 10 // Incentivize closer to 0\n        if (lowercases > most) {\n            most = lowercases\n            best = d\n        }\n    }\n    return best\n}\n\nfunction separator(beat, difference) {\n    if (difference < beat / 4)\n        return '-'\n    if (difference < beat / 2)\n        return ' '\n    if (difference < beat) // Or equal to a beat\n        return ' - '\n    if (difference < beat * 2)\n        return ', '\n    if (difference < beat * 2.5)\n        return '. '\n    if (difference < beat * 3)\n        return '.. '\n    if (difference < beat * 4)\n        return '... '\n    else return '\\n' // Long pause\n}\n\nexport { vpScale, Sheet, Note, Chord, generateSheet, bestTransposition, separator }\n","<script>\n    import { createEventDispatcher } from 'svelte'\n    let dispatch = createEventDispatcher()\n\n    export let show\n\n    export let settings = {\n        beats: 4,\n        quantize: 35,\n        sequentialQuantize: false,\n        pShifts: 'Start',\n        pOors: 'Start',\n        oors: true,\n        tempoMarks: false,\n        transposition: 0\n    }\n</script>\n\n{#if show}\n<div style=\"display: inline-block\">\n\t<label for=\"number\">Transpose (sheet) by:</label>\n\t<input type=\"number\" bind:value={settings.transposition} min=-24 max=24>\n    <button on:click={() => { dispatch('auto') }}>Auto-transpose</button>\n</div>\n\n<div>\n    <div class='select-div'>\n        <label for='shifts-position'>Place shifted notes at:</label>\n        <select name='shifts-position' id='shifts-position' bind:value={settings.pShifts}>\n            <option value='Start'>Start</option>\n            <option value='End'>End</option>\n        </select>\n    </div>\n\n    <div class='select-div'>\n        <label for='oors-position'>Place out of range notes at:</label>\n        <select name='oors-position' id='oors-position' bind:value={settings.pOors}>\n            <option value='Start'>Start</option>\n            <option value='End'>End</option>\n        </select>\n    </div>\n\n    <div class='beats'>\n        <label class='slider-label' for='beats-for-newline'>Break lines: </label>\n        <input type='range' id='beats-for-newline' min=1 max=32 bind:value={settings.beats}>\n        <span>Every {settings.beats == 1 ? \"1 beat\" : `${settings.beats} beats`}</span>\n    </div>\n\n    <div class='quantize'>\n        <label class='slider-label' for='quantize-prompt'>Quantize: </label>\n        <input type='range' id=\"quantize-prompt\" min=1 max=100 bind:value={settings.quantize}>\n        <span>{settings.quantize} miliseconds</span>\n    </div>\n\n    <label for='order-quantizes'>\n        <input type='checkbox' id=\"order-quantizes\" bind:checked={settings.sequentialQuantize}>\n        Sequential quantizes\n    </label>\n\n    <label for='out-of-range'>\n        <input type='checkbox' id=\"out-of-range\" bind:checked={settings.oors}>\n        Include out of range (ctrl) notes\n    </label>\n\n    <label for='tempo-checkbox'>\n        <input type='checkbox' id=\"tempo-checkbox\" bind:checked={settings.tempoMarks}>\n        Show tempo marks\n    </label>\n</div>\n\n<style>\n    label {\n        max-width: fit-content;\n        text-align: center;\n    }\n\n    .select-div {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        text-align: center;\n    }\n\n    select {\n        height: auto;\n        margin-left: 0.4em;\n        margin-top: 0.2em;\n        margin-bottom: 0;\n    }\n\n    input[type=\"checkbox\"] {\n        display: inline-block;\n        vertical-align: middle;\n    }\n\n    input[type=\"range\"] {\n        margin-left: 0.4em;\n        margin-right: 0.4em;\n        margin-bottom: 0;\n    }\n\n    input[type=\"file\"] {\n        margin-bottom: 0;\n    }\n    \n    .beats, .quantize, .select-label {\n        display: flex;\n        flex-direction: row;\n    }\n</style>\n{/if} <!-- {#if show} -->\n","<script>\n    export let track, idx;\n    export let selected = false;\n</script>\n\n<div id=\"track\">\n    <input type=\"checkbox\" bind:checked={selected}>\n    Track {idx} - {track.getTrackLength()} events\n</div>\n\n","const colors = {\n    long: 'white',\n    quadruple: '#a3f0a3',\n    whole: '#74da74',\n    half: '#9ada5a',\n    quarter: '#c0c05a',\n    eighth: '#da7e5a',\n    sixteenth: '#daa6a6',\n    thirtysecond: '#ff1900',\n    sixtyfourth: '#9c0f00'\n}\n\n// These two are deprecated\nfunction yellow_to_green(value) {\n    value = Math.max(0.0, Math.min(4.0, value))\n    const red = 255 - (255/4.0)*value\n    const green = 255\n    return `rgb(${red}, ${green}, 0)`\n}\n\nfunction yellow_to_red(value) {\n    value = Math.max(0.0, Math.min(4.0, value))\n    const red = 255\n    const green = 255 - (255/4.0)*value \n    return `rgb(${red}, ${green}, 0)`\n}\n\nfunction colored_string(s, color) {\n    return `<span style=\"color:${color}\">${s}</span>`\n}\n\nexport { colors, colored_string, yellow_to_green, yellow_to_red }\n","<script>\n    import { colors, colored_string } from \"../utils/Rendering.js\"\n    import { separator } from \"../utils/VP.js\"\n    import { Sheet } from \"../utils/VP.js\"\n\n    import { createEventDispatcher } from \"svelte\";\n    let dispatch = createEventDispatcher()\n\n    export let index /* ID */\n\n    export let line /* Sheet-like */\n    $: {\n        previousChord = { notes: [{ playTime: -999999 }] }\n        originalSheet = new Sheet(line.chords)\n        sheet = originalSheet.transpose(line.transposition, settings.pShifts, settings.pOors)\n        penalty = 0.000\n    }\n\n    export let passedNext // Next note for coloring purposes\n\n    let originalSheet = new Sheet(line.chords)\n    let sheet = originalSheet\n\n    export let sameTranspositionAsPrevious = false\n\n    export let settings\n    \n    let penalty = 0.000\n    let previousChord = { notes: [{ playTime: -999999 }] }\n\n    function colored_chord(chord, color) {\n        let res = `<span style=\"color:${color}\">`\n\n        let isChord = (chord.notes.length > 1 && chord.notes.find(note => note.valid === true))\n        if (settings.oors === false)\n        if (chord.notes.filter(note => note.outOfRange === false).length <= 1)\n            isChord = false\n\n        if (isChord) res += '['\n\n        for (const note of chord.notes) {\n            if (!note.valid) { res += '_'; continue }\n\n            if (note.outOfRange === true) {\n                if (settings.oors === true)\n                res += `<span style=\"display:inline-block; border-bottom: 2px solid ${color}\">${note.char}</span>`\n            } else res += note.char\n        }\n\n        if (isChord) res += ']'\n\n        return res + '</span>'\n    }\n\n    function render(sheet) {\n        const negtransposition = -line.transposition\n\n        let result = '' \n        if (!sameTranspositionAsPrevious) {\n            result += colored_string(`Transpose by: ${negtransposition > 0 ? '+' : ''}${negtransposition}`, 'white')\n            if (line.difference) result += colored_string(` (${-line.difference > 0 ? '+' : ''}${-line.difference})`, 'white')\n            result += '\\n'\n        }\n\n        let chords = sheet.chords\n        for (let i = 0; i < chords.length; i++) {\n            if (!chords) { result += '[bad-midi-file!]<br>'; continue }\n\n            const current = {\n                chord: chords[i],\n            }; current.note = current.chord?.notes[0]\n\n            const next = {\n                chord: chords[i+1],\n            }; next.note = next.chord?.notes[0]\n\n            if (!current.note) { continue }\n\n            if (!next.note) {\n                if (passedNext) { next.note = passedNext; }\n                else { result += colored_chord(current.chord, 'white'); continue  }\n            }\n\n            let beat = current.note.tempo / 1000\n\n            let difference = next.note.playTime - current.note.playTime \n            if(current.chord.is_quantized)\n                difference = next.note.playTime - current.chord.notes.slice(-1)[0].playTime \n            difference -= 0.5\n\n            let color = colors.long\n\n            if (difference < beat / 16)\n                color = colors.sixtyfourth\n            else if (difference < beat / 8)\n                color = colors.thirtysecond\n            else if (difference < beat / 4)\n                color = colors.sixteenth\n            else if (difference < beat / 2)\n                color = colors.eighth\n            else if (difference < beat)\n                color = colors.quarter\n            else if (difference < beat * 2) // Or equal to a beat\n                color = colors.half\n            else if (difference < beat * 2)\n                color = colors.whole\n            else if (difference < beat * 4)\n                color = colors.quadruple\n            else if (difference < beat * 8)\n                color = colors.long\n\n            result += colored_chord(current.chord, color)\n            result += (settings.tempoMarks ? colored_string(separator(beat, difference), color) : ' ')\n        }\n        return result\n    }\n</script>\n\n<div class=\"viewer\">\n    <button class=\"line\" \n            on:click={() => dispatch('clicked', { index: +index, by: 1 })}\n            on:contextmenu|preventDefault={() => dispatch('clicked', {index: +index, by: -1})}\n            on:auxclick|preventDefault={() => dispatch('auto', {index: +index, sheet: originalSheet})}\n            on:mousedown={(e) => {if(e.which === 2) e.preventDefault()}}>\n        {@html render(sheet)}\n    </button>\n</div>\n\n<style>\n    .viewer {\n        display: block;\n        white-space: pre-line;\n        overflow-y: scroll;\n        overflow-x: hidden;\n        font-family: \"Trebuchet MS\", \"Lucida Sans Unicode\", \"Lucida Grande\",\n            \"Lucida Sans\", Arial, sans-serif;\n        /* height: 100%; */\n        padding: 0.1em;\n        background: #2D2A32;\n    }\n\n    .line {\n        all: unset;\n    }\n    .line:hover {\n        filter: brightness(75%);\n        cursor: pointer\n    }\n    .line:active {\n        all: unset\n    }\n</style>\n\n","<script>\n\timport { getMIDIFileFromArrayBuffer, getEvents, getTempo } from './utils/MIDI.js'\n\timport { generateSheet, bestTransposition } from './utils/VP.js'\n    import SheetOptions from './components/SheetOptions.svelte'\n    import Track from './components/Track.svelte'\n    import Line from './components/Line.svelte'\n\timport { onMount } from 'svelte'\n\n\t// DOM input element\n\tlet fileInput\n\n\tlet trackSelection = false\n\tlet sheetReady = false\n\n\tlet MIDIObject\n    let tracks\n\n\t// VP.js/Sheet\n\tlet originalSheet\n\n    // [true, true, false, true, ...]\n    let selectedTracks\n\n    // For line break calculations\n    let penalty = 0.000\n    let error_range = 0.5\n\n\tonMount(() => {\n\t\tfileInput.addEventListener('change', async() => {\n\t\t\tawait fileInput.files[0].arrayBuffer().then((arrbuf) =>{\n\t\t\t\tMIDIObject = getMIDIFileFromArrayBuffer(arrbuf)\n\n\t\t\t\tif(!getTempo(MIDIObject).ticksPerBeat)\n\t\t\t\t\tconsole.error(\"No ticksPerBeat in this midi file\")\n\n                tracks = MIDIObject.tracks\n                selectedTracks = tracks.map(() => true)\n\n\t\t\t\ttrackSelection = true\n\t\t\t\tsheetReady = false\n                penalty = 0.000\n\t\t\t})\n\t\t}, false)\n\t})\n\n    function shouldBreak(note) {\n        if (!note) return false\n        let tempo_ms = note.tempo / 1000 // Turn 652174 into 652.174\n        let goal = tempo_ms * settings.beats\n        let normalizedPlayTime = note.playTime - penalty\n        // console.log(`So far: ${normalizedPlayTime}, Goal: ${goal}`)\n        if (normalizedPlayTime + error_range >= goal) {\n            penalty += normalizedPlayTime\n            return true\n        }\n    }\n\n    let saveSheet = () => {\n\t\toriginalSheet = generateSheet(getEvents(MIDIObject, selectedTracks), settings.quantize, settings.pShifts, settings.pOors, settings.sequentialQuantize)\n    }\n\n\tlet createLines = () => {\n        sheetReady = false\n\n        if (!originalSheet) return\n        const chords = originalSheet.chords\n\n        penalty = 0.000\n        lines = []\n        let acc = [] // [Chord]\n        for (let i = 0; i <= chords.length; i++) {\n            const current = {\n                chord: chords[i],\n            }; current.note = current.chord?.notes[0]\n\n            const next = {\n                chord: chords[i+1],\n            }; next.note = next.chord?.notes[0]\n\n            if (!current.note) { continue }\n            if (shouldBreak(current.note)) {\n                lines.push({ chords: acc, transposition: settings.transposition, continuation: current.note })\n                acc = []\n            }\n\n            acc.push(current.chord)\n        }\n        lines.push({ chords: acc, transposition: 0, continuation: undefined }) /* Push the leftovers */\n\t\tsheetReady = true\n\n\t\t// Hide TrackChooser\n\t\ttrackSelection = false\n        lines = lines\n\t}\n\n    let oldSettings\n    let settings\n\t$: {\n        if (!oldSettings) { oldSettings = { ...settings }; break $ }\n        if (oldSettings.transposition != settings.transposition) {\n            for (let line of lines) {\n                line.transposition = settings.transposition\n            }\n            lines = lines\n        }\n        else if (oldSettings.beats != settings.beats) {\n            createLines()\n        }\n        else if (oldSettings.quantize != settings.quantize ||\n                 oldSettings.sequentialQuantize != settings.sequentialQuantize) {\n            saveSheet()\n            createLines()\n        }\n        oldSettings = { ...settings }\n\t}\n\n    let auto = () => { settings.transposition = bestTransposition(originalSheet, 11) }\n\n    let lines = [] // [{chords: [], transposition?, continuation: undefined}...]\n\n    function setLineTransposition(idx, transposition) {\n        let index = +idx\n        lines[index].transposition = transposition\n\n        lines[index].difference = lines[index].transposition - lines[index-1].transposition // Relative\n        lines[index+1].difference = lines[index+1].transposition - lines[index].transposition // Relative\n    }\n\n    let lineClicked = (e) => {\n        const index = e.detail.index\n        let by = e.detail.by\n        console.log(`Transposing line ${e.detail.index} by ${by}`)\n        setLineTransposition(index, lines[index].transposition+by)\n    }\n\n    let autoLine = (e) => {\n        const index = e.detail.index\n        const sheet = e.detail.sheet\n        setLineTransposition(index, bestTransposition(sheet, 11))\n    }\n</script>\n\n<svelte:head>\n    <title>MIDI Converter</title>\n</svelte:head>\n\n<div style=\"display: inline-block\">\n    <label for=\"file\">Please import a MIDI file:</label>\n    <input type=\"file\" bind:this={fileInput} accept=\".mid,.midi\">\n</div>\n\n<SheetOptions show={sheetReady} on:auto={auto} bind:settings/>\n\n{#if trackSelection}\n<section id=\"track-chooser\">\n    <div id=\"tracks\">\n        {#each tracks as track, idx}\n            <Track {track} idx={idx+1} \n            bind:selected={selectedTracks[idx]} />\n        {/each}\n    </div>\n    <button on:click={() => { saveSheet(); createLines() }}>Import selected tracks</button>\n</section>\n{/if}\n\n{#if sheetReady}\n    {#each Object.entries(lines) as [ index, line ]}\n        {@const last = lines[index-1]}\n        {@const next = line.continuation}\n        {@const sameTranspositionAsPrevious = last?.transposition == line.transposition}\n        <Line line={line} \n              {sameTranspositionAsPrevious}\n              {index} \n              {settings} \n              passedNext={next}\n              on:clicked={lineClicked} \n              on:auto={autoLine}/>\n    {/each}\n{/if}\n","import MIDIFile from 'midifile'\nimport MIDIEvents, { EVENT_MIDI_NOTE_ON } from 'midievents'\n\nfunction getMIDIFileFromArrayBuffer(array_buffer) {\n    return new MIDIFile(array_buffer)\n}\n\nfunction getTempo(MIDIObject) {\n    if (MIDIObject.header.getTimeDivision() === MIDIFile.Header.TICKS_PER_BEAT) {\n        return { ticksPerBeat: MIDIObject.header.getTicksPerBeat() }\n    } else {\n        return { \n            SMPTEFrames:   MIDIObject.header.getSMPTEFrames(),\n            ticksPerFrame: MIDIObject.header.getTicksPerFrame() \n        }\n    }\n}\n\nfunction getEvents(MIDIObject, tracks) {\n    let totalEvents = []\n\n    let events = MIDIObject.getEvents()\n\n    events.forEach((event) => {\n        if (event.subtype == MIDIEvents.EVENT_META_SET_TEMPO)\n            totalEvents.push(event)\n\n        if (event.subtype != EVENT_MIDI_NOTE_ON) return\n\n        if(!event.track && tracks[0] === true) { // Only one track\n            totalEvents.push(event)\n            return\n        }\n\n        if ((tracks[event.track] === true)) {\n            totalEvents.push(event)\n        }\n    })\n\n    return totalEvents\n}\n\nexport { getMIDIFileFromArrayBuffer, getEvents, getTempo }\n","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","option","__value","selected","selectedIndex","select_value","selected_option","querySelector","current_component","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","cancelable","callbacks","$$","bubbles","e","createEvent","initCustomEvent","custom_event","slice","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","bind","index","props","undefined","bound","create_component","mount_component","customElement","m","new_on_destroy","on_mount","map","filter","on_destroy","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","keys","MIDIFileHeader","buffer","ArrayBuffer","datas","DataView","HEADER_LENGTH","String","fromCharCode","getUint8","getUint32","Uint8Array","FRAMES_PER_SECONDS","TICKS_PER_BEAT","prototype","getFormat","format","getUint16","setFormat","setUint16","getTracksCount","setTracksCount","n","getTickResolution","tempo","getSMPTEFrames","getTicksPerFrame","getTicksPerBeat","getTimeDivision","divisionWord","setTicksPerBeat","ticksPerBeat","smpteFrames","setSMTPEDivision","ticksPerFrame","setUint8","MIDIFileHeader_1","MIDIFileTrack","start","trackLength","byteLength","toString","HDR_LENGTH","getTrackLength","setTrackLength","setUint32","getTrackContent","byteOffset","setTrackContent","dataView","origin","destination","j","MIDIFileTrack_1","MIDIEvents","EVENT_META","EVENT_SYSEX","EVENT_DIVSYSEX","EVENT_MIDI","EVENT_META_SEQUENCE_NUMBER","EVENT_META_TEXT","EVENT_META_COPYRIGHT_NOTICE","EVENT_META_TRACK_NAME","EVENT_META_INSTRUMENT_NAME","EVENT_META_LYRICS","EVENT_META_MARKER","EVENT_META_CUE_POINT","EVENT_META_MIDI_CHANNEL_PREFIX","EVENT_META_END_OF_TRACK","EVENT_META_SET_TEMPO","EVENT_META_SMTPE_OFFSET","EVENT_META_TIME_SIGNATURE","EVENT_META_KEY_SIGNATURE","EVENT_META_SEQUENCER_SPECIFIC","EVENT_MIDI_NOTE_OFF","EVENT_MIDI_NOTE_ON","EVENT_MIDI_NOTE_AFTERTOUCH","EVENT_MIDI_CONTROLLER","EVENT_MIDI_PROGRAM_CHANGE","EVENT_MIDI_CHANNEL_AFTERTOUCH","EVENT_MIDI_PITCH_BEND","MIDI_1PARAM_EVENTS","MIDI_2PARAMS_EVENTS","createParser","stream","startAt","strictMode","eventTypeByte","MIDIEventType","MIDIEventChannel","MIDIEventParam1","position","readUint8","readUint16","v","readUint32","readVarInt","readBytes","bytes","pos","end","next","delta","badsubtype","subtype","msb","lsb","prefix","tempoBPM","hour","minutes","seconds","frames","subframes","scale","param1","param2","param3","param4","channel","writeToTrack","events","k","getRequiredBufferLength","bufferLength","MIDIEvents_1","UTF8","isNotUTF8","getStringFromBytes","getCharLength","getCharCode","getBytesForCharCode","setBytesFromCharCode","setBytesFromString","string","strict","Infinity","neededBytes","codePointAt","theByte","charLength","charCode","mask","parseInt","chars","fromCodePoint","join","MIDIFile","track","curIndex","buf","ensureArrayBuffer","header","tracks","getEvents","trackParsers","smallestDelta","playTime","filteredEvents","tickResolution","parser","curEvent","getMidiEvents","getLyrics","texts","lyrics","apply","getTrackEvents","setTrackEvents","deleteTrack","addTrack","getContent","Header","Track","MIDIFile_1","Note","constructor","BPM","shifts","oors","char","vpScale","valid","outOfRange","includes","displayValue","Chord","notes","sequentialQuantize","is_quantized","previous_note","note","sort","values","no_dupes","Sheet","chords","transpose","by","newChords","chord","newChord","lowercases","bestTransposition","sheet","deviation","countLowercases","monochord","oor","most","best","Math","abs","separator","beat","difference","beats","t24_value","quantize","pShifts","select0","pOors","select1","div0","label0","input0","transposition","button","div5","div1","label1","option0","option1","div2","label2","option2","option3","div3","label3","input1","span0","div4","label4","input2","span1","label5","input3","checked","label6","input4","label7","input5","tempoMarks","t19","t19_value","t24","create_if_block","dispatch","show","settings","t3_value","div","t3","idx","colors","long","quadruple","whole","half","quarter","eighth","sixteenth","thirtysecond","sixtyfourth","colored_string","s","color","raw_value","innerHTML","which","line","passedNext","originalSheet","sameTranspositionAsPrevious","colored_chord","res","isChord","find","$$invalidate","negtransposition","result","current","child_ctx","constants_1","continuation","constants_2","section","each_blocks","track_props","track_changes","entries","create_if_block_1","label","error_range","fileInput","MIDIObject","selectedTracks","trackSelection","sheetReady","penalty","shouldBreak","goal","normalizedPlayTime","files","arrayBuffer","arrbuf","SMPTEFrames","getTempo","console","error","oldSettings","saveSheet","currentChord","lastPlaytime","nextBPM","nextTempo","playtime","generateSheet","totalEvents","createLines","lines","acc","setLineTransposition","log","$$value","$$self","body"],"mappings":"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"}